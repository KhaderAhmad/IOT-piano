#include <Arduino.h>
#include <Wire.h>
#include "Adafruit_MPR121.h"
#ifndef _BV
#define _BV(bit) (1 << (bit)) 
#endif

// #include <Adafruit_NeoPixel.h>
// #ifdef __AVR__
//  #include <avr/power.h> // Required for 16 MHz Adafruit Trinket
// #endif

#include "SPIFFS.h"
using namespace std;

#include <WiFi.h>
#include <HTTPClient.h>

//Screen 
#include <SPI.h>
#include <Wire.h>
//#include <Adafruit_GFX.h>
//#include <Adafruit_SSD1306.h>

//definening notes
#define DO1_frequence 523
#define RE_frequence 587
#define MI_frequence 659

// TOUCH SENSOR PIN
#define DO1_TouchPin 0
#define RE_TouchPin 1
#define MI_TouchPin 2

// CHANNEL (multiple of 2)
#define DO1_CHANNEL 0
#define RE_CHANNEL 2
#define MI_CHANNEL 4

// CHANNEL PIN 
#define DO1_ChannelPin 32
#define RE_ChannelPin 33
#define MI_ChannelPin 25

// TOUCH PARAMETERS AND SETUP
Adafruit_MPR121 cap = Adafruit_MPR121();
uint32_t currtouched = 0;

// SOUND PARAMETERS AND SETYP
const int PWM_RESOLUTION = 8; 
const int MAX_DUTY_CYCLE = (int)(pow(2, PWM_RESOLUTION) - 1); 
int dc = 128;

void setup_mpr121(){

  while (!Serial) { // needed to keep leonardo/micro from starting too fast!
    delay(10);
  }
  
  Serial.println("Adafruit MPR121 Capacitive Touch sensor test"); 
  
  // Default address is 0x5A, if tied to 3.3V its 0x5B
  // If tied to SDA its 0x5C and if SCL then 0x5D
  if (!cap.begin(0x5A)) {
    Serial.println("MPR121 not found, check wiring?");
  }
  Serial.println("MPR121 found!");
}


  // SET UP FOR THE SOUND 
void setup_sound(){

  //Connect channels and frequences 
  ledcSetup(DO1_CHANNEL, DO1_frequence, PWM_RESOLUTION);
  ledcSetup(RE_CHANNEL, RE_frequence, PWM_RESOLUTION);
  ledcSetup(MI_CHANNEL, MI_frequence, PWM_RESOLUTION);

  // ledcAttachPin(uint8_t pin, uint8_t channel);
  ledcAttachPin(DO1_ChannelPin, DO1_CHANNEL);
  ledcAttachPin(RE_ChannelPin, RE_CHANNEL);
  ledcAttachPin(MI_ChannelPin, MI_CHANNEL);

}

void setup() {
  // put your setup code here, to run once:
   Serial.begin(115200);
  //set up touch
  setup_mpr121();
  
  if (!SPIFFS.begin(true)) {
    Serial.println("An error occurred while formatting SPIFFS");
    return;
  }

  // SET UP FOR THE SOUND 
  setup_sound();

}

void loop() {
  // put your main code here, to run repeatedly:

    //turn on if touched 
    currtouched = cap.touched();
    if ((currtouched & _BV(DO1_TouchPin))){

      ledcWrite(DO1_CHANNEL, 128); 
    }

    if ((currtouched & _BV(RE_TouchPin))){
      //Serial.println("RE IS touched");

      ledcWrite(RE_CHANNEL, 128); 
    }

    if ((currtouched & _BV(MI_TouchPin))){
      ledcWrite(MI_CHANNEL, 128);
    }




    //turn off if released
    if (!(currtouched & _BV(DO1_TouchPin))) {
          ledcWrite(DO1_CHANNEL, 0); 
    }

    if (!(currtouched & _BV(RE_TouchPin))) {
          ledcWrite(RE_CHANNEL, 0); 
    }

    if (!(currtouched & _BV(MI_TouchPin))) {
          ledcWrite(MI_CHANNEL, 0); 
    }

  }

}

